@model Snap_Bank.ViewModel.FundTransferViewModel
@{
    ViewBag.Title = "FundTransfer";
}
@section AddToHead
{
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <link href="@Url.Content("~/Content/FundTransfer.css")" rel="stylesheet" type="text/css" />
}
<div class="row" style="width: 100%;">
    <div class="col-1 col-md-1">
        <div class="sidebar">
            <div class="imageContainer">
                <img src="~/Images/family icon.png" alt="family image" />
                <div class="logoText">SNAP BANK</div>
            </div>
            <div class="buttons">
                <a class="active" href="/Snap/Home">
                    <img src="~/Images/home.png" alt="" />
                </a>
                <a class="active" href="/Login/Signin/">
                    <img src="~/Images/log-out.png" alt="" />
                </a>
            </div>
        </div>
    </div>
    <div class="col-11 col-md-11 col-sm-11" style="padding: 3% 1%;">
        <div class="card main-card border-2" style="background-color: #f1f1f1;">
            <div class="row">
                <div class="col m-5">
                    <div class="card" style="background-color: #f1f1f1;">
                        <div class="card-body">
                            <div class="d-flex justify-content-right h2">
                                SERVICE IS OUR MOTO
                            </div>
                            <div class="d-flex justify-content-right h4 font-weight-bold mt-5" style="color: brown;">
                                CURRENT ACCOUNT BALANCE : @ViewBag.CurrentAccountBalance
                            </div>
                            <div class="d-flex justify-content-right h4 font-weight-bold mt-5" style="color: brown;">
                                SAVINGS ACCOUNT BALANCE : @ViewBag.SavingsAccountBalance
                            </div>
                        </div>
                    </div>
                    <div class="card mt-5 p-3" style="background-color: #f1f1f1;">
                        @using (Html.BeginForm("SelfFundTransfer", "Snap", FormMethod.Post))
                        {
                            <div class="d-flex justify-content-right mt-5 h5 mb-3">
                                SAME ACCOUNT TRANSFER
                            </div>
                            <div class="row">
                                <div class="col-12 col-md-12 col-sd-12">
                                    <span style="font-weight: bold; color: brown; margin-top: 10px">From</span>
                                    <div class="mt-0 mb-3">
                                        @Html.DropDownListFor(model => model.selfAccountViewModel.FromAccountType, new SelectList(Enum.GetValues(typeof(Snap_Bank.ViewModel.AccountType))), "Choose Account Type", new { @class = "form-select form-control form-control-md" })
                                    </div>
                                </div>
                                <div class="col-12 col-md-12 col-sd-12">
                                    <span style="font-weight: bold; color: brown; margin-top: 10px">To Account</span>
                                    <div class="mt-0">
                                        @Html.DropDownListFor(model => model.selfAccountViewModel.ToAccountType, new SelectList(Enum.GetValues(typeof(Snap_Bank.ViewModel.AccountType))), "Choose Account Type", new { @class = "form-select form-control form-control-md" })

                                    </div>
                                </div>
                                <div class="col-12 col-md-12 col-sd-12">
                                    <div class="mt-3">
                                        <span style="font-weight: bold; color: brown; margin-top: 10px">Enter Amount</span>
                                        @Html.EditorFor(model => model.selfAccountViewModel.AmountToTransfer, new { htmlAttributes = new { type = "Number", @class = "form-control form-control-md" } })
                                        @Html.ValidationMessageFor(model => model.selfAccountViewModel.AmountToTransfer, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="d-flex justify-content-right h3 mb-5"></div>
                            <div class="button">
                                <button type="submit" class="btn btn-primary" style="padding-left: 2.5rem; padding-right: 2.5rem">
                                    CONFIRM TRANSFER
                                </button>
                            </div>
                        }
                    </div>
                </div>
                <div class="col m-5">
                    <div class="card" style="background-color: #f1f1f1;">
                        @using (Html.BeginForm("DifferentAccounFundTransfer", "Snap", FormMethod.Post))
                        {
                            <div class="card-body">
                                <div class="d-flex justify-content-right mt-1 h5 mb-3">
                                    DIFFERENT ACCOUNT TRANSFER
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <span style="font-weight: bold; color: brown; margin-top: 10px">From</span>
                                        <div class="mt-0 mb-3">
                                            @Html.DropDownListFor(model => model.differentAccountTransferModel.FromAccountType, new SelectList(Enum.GetValues(typeof(Snap_Bank.ViewModel.AccountType))), "Choose Account Type", new { @class = "form-select form-control form-control-md" })
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <span style="font-weight: bold; color: brown; margin-top: 10px">To Country</span>
                                        <div class="mt-0">
                                            @Html.DropDownListFor(model => model.differentAccountTransferModel.CountryName, new SelectList(Enum.GetValues(typeof(Snap_Bank.ViewModel.CountryName))), "Choose Country", new { @onchange = "setConversionRate(this.value)", @class = "form-select form-control form-control-md" })
                                            <script>
                                                function setConversionRate(selected) {
                                                    if (selected == "UnitedStatesOfAmerica")
                                                        document.getElementById("conversionRate").value = 1.30;
                                                    else if (selected == "UnitedKingdom")
                                                        document.getElementById("conversionRate").value = 1;
                                                    else if (selected == "Europe")
                                                        document.getElementById("conversionRate").value = 1.20;
                                                }
                                            </script>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-right  h5 mb-3">
                                    RECIEPIENT ACCOUNT DETAILS
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <label>Sort Code</label>
                                        <div class="row">
                                            <div class="col">
                                                @Html.EditorFor(model => model.differentAccountTransferModel.sortcode1, new { htmlAttributes = new { Type = "text", @readonly = "readonly", @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.sortcode1, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col">
                                                @Html.EditorFor(model => model.differentAccountTransferModel.sortcode2, new { htmlAttributes = new { Type = "text", @readonly = "readonly", @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.sortcode2, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col">
                                                @Html.EditorFor(model => model.differentAccountTransferModel.sortcode3, new { htmlAttributes = new { Type = "text", @readonly = "readonly", @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.sortcode3, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="">
                                            <label for="floatingTextarea">Enter Account Number</label>
                                            @Html.EditorFor(model => model.differentAccountTransferModel.AccountNumber, new { htmlAttributes = new { @Value = "", @id = "AccountNumber", @class = "form-control form-control-md" } })
                                            @Html.ValidationMessageFor(model => model.differentAccountTransferModel.AccountNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <script>
                                            document.getElementById('AccountNumber').addEventListener('input', updateName);
                                            function updateName(e) {
                                                if (e.target.value.length == 9) {
                                                    GetAccountName(e.target.value);
                                                }
                                            }
                                            function GetAccountName(AccountNumber) {
                                                $.ajax({
                                                    url: '@Url.Action("GetName", "Snap")',
                                                    data: { id: AccountNumber },
                                                  success: function(data){
                                                      //call is successfully completed and we got result in data
                                                      console.log(data);
                                                      document.getElementById('HolderName').value = data;
                                                      document.getElementById('header').style.color = "black";
                                                      if (data == "") {
                                                          document.getElementById('HolderName').value = "No Account Found";
                                                          document.getElementById('header').style.color = "Red";
                                                      }
                                                  },
                                                  error:function (xhr, ajaxOptions, thrownError){
                                                      //some errror, some show err msg to user and log the error
                                                      console.log(xhr.responseText);
                                                                }
                                                  });
                                            }
                                        </script>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <div class="mt-2">
                                            <label for="floatingTextarea" id="header"> Account Holder Name : </label>
                                            @Html.EditorFor(model => model.differentAccountTransferModel.AccountHolder, new { htmlAttributes = new { @id = "HolderName", @readonly = "readonly", @Value = ViewBag.AccountHolderName, @class = "form-control form-control-md" } })
                                            @Html.ValidationMessageFor(model => model.differentAccountTransferModel.AccountHolder, "", new { @id = "NoFounmessage", @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="mt-2">
                                            <label for="floatingTextarea">Bank Name : </label>
                                            @Html.EditorFor(model => model.differentAccountTransferModel.BankName, new { htmlAttributes = new { @Value = "Snap Bank", @readonly = "readonly", @class = "form-control form-control-md" } })
                                            @Html.ValidationMessageFor(model => model.differentAccountTransferModel.BankName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="transfer-detailes2">
                                    <div class="d-flex justify-content-right mt-4 h5 mb-3">
                                        PAYMENT DETAILS
                                    </div>
                                    <div class="row">
                                        <div class="col">
                                            <div class="mt-3 mb-3">
                                                <label for="floatingTextarea">Enter Amount in GBP </label>
                                                @Html.EditorFor(model => model.differentAccountTransferModel.AmountToTransfer, new { htmlAttributes = new { @id = "Amount", @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.AmountToTransfer, "", new { @class = "text-danger" })
                                                <script>
                                                    document.getElementById('Amount').addEventListener('input', updateValues);
                                                    function updateValues(e) {
                                                        var conversionRate = document.getElementById('conversionRate').value;
                                                        document.getElementById('TotalAmount').value = e.target.value * conversionRate;
                                                    }
                                                </script>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <div class="mt-0">
                                                <label for="floatingTextarea" style="font-size:smaller">Transfer Amount in GBP / EUR / DOLLARS</label>

                                                @Html.EditorFor(model => model.differentAccountTransferModel.ConvertedAmount, new { htmlAttributes = new { @id = "TotalAmount", @readonly = "readonly", @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.ConvertedAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <span style="font-weight: bold; color: brown; margin-top: 10px"></span>
                                    <div class="row">
                                        <div class="col">
                                            <div class="row">
                                                <div class="col col-sd-12">
                                                    <div class="d-flex justify-content-right mt-4 h5 mb-3">
                                                        Conversion Rate:
                                                    </div>
                                                </div>
                                                <div class="col col-sd-12 mt-4 mb-3">
                                                    @Html.EditorFor(model => model.differentAccountTransferModel.ConversionRate, new { htmlAttributes = new { type = "", @id = "conversionRate", @readonly = "readonly", @class = "form-control form-control-md" } })
                                                    @Html.ValidationMessageFor(model => model.differentAccountTransferModel.ConversionRate, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                        </div>
                                        <div class="col">
                                            <div class="mt-0 mb-3">
                                                <label for="floatingTextarea">Enter four-Digit Pin </label>
                                                @Html.EditorFor(model => model.differentAccountTransferModel.pin, new { htmlAttributes = new { type = "", @Value = "", @maxlength = 4, @class = "form-control form-control-md" } })
                                                @Html.ValidationMessageFor(model => model.differentAccountTransferModel.pin, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-right  h3 mb-3"></div>
                                    <div class="button">
                                        <button type="submit" class="btn btn-primary" style="padding-left: 2.5rem; padding-right: 2.5rem">
                                            CONFIRM TRANSFER
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
